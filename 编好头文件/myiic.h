#ifndef __MYIIC_H
#define __MYIIC_H
#include  "stdint.h"
//IO方向设置
#define   Port_IIC    GPIOB
#define   IIC_SCL_Pin GPIO_Pin_6
#define   IIC_SDA_Pin GPIO_Pin_7
#define   PORT_CLK  RCC_APB2Periph_GPIOB
//IO操作函数	 
//#define IIC_SCL    PBout(6) //SCL
#define IIC_SCL_1    GPIO_SetBits(Port_IIC,IIC_SCL_Pin ) 
#define IIC_SCL_0    GPIO_ResetBits(Port_IIC,IIC_SCL_Pin ) 
#define IIC_SDA_1    GPIO_SetBits(Port_IIC,IIC_SDA_Pin )  //SDA	
#define IIC_SDA_0    GPIO_ResetBits(Port_IIC,IIC_SDA_Pin )  //SDA	
//#define READ_SDA   PBin(7)  //输入SDA 
#define READ_SDA   GPIO_ReadInputDataBit(Port_IIC,IIC_SDA_Pin )

//IIC所有操作函数
void IIC_Init(void);                //初始化IIC的IO口				 
void IIC_Start(void);				//发送IIC开始信号
void IIC_Stop(void);	  			//发送IIC停止信号
void IIC_Send_Byte(uint8_t txd);			//IIC发送一个字节
uint8_t IIC_Read_Byte(unsigned char ack);//IIC读取一个字节
uint8_t IIC_Wait_Ack(void); 				//IIC等待ACK信号
void IIC_Ack(void);					//IIC发送ACK信号
void IIC_NAck(void);				//IIC不发送ACK信号

void IIC_Write_One_Byte(uint8_t daddr,uint8_t addr,uint8_t data);
uint8_t IIC_Read_One_Byte(uint8_t daddr,uint8_t addr);	  
#endif
















